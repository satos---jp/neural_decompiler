
import pickle

tds = []
tdsi = 0

lens = {i: 0 for i in range(1000)}
for i in range(13):
	if i%10==0:
		print(i)
	with open('dataset_asm_ast/data_%d.pickle' % i,'rb') as fp:
		cs = pickle.load(fp)
		pass
	print('loaded')
	print(len(cs[1]))
	#continue
	for d in cs[1]:
		#print(d)
		if lens[d[1]] >= 1000:
			continue
		lens[d[1]] += 1
		tds.append(d)
		if len(tds)>=100000:
			with open('dataset_asm_ast/data_cutoff_%d.pickle' % tdsi,'wb') as fp:
				print(len(tds))
				pickle.dump(tds,fp)
			tds = []
			tdsi += 1
	print('calced')

with open('dataset_asm_ast/data_cutoff_%d.pickle' % tdsi,'wb') as fp:
	print(len(tds))
	pickle.dump(tds,fp)

print(tdsi)
print(lens)
exit()


lens = {0: 0, 1: 0, 2: 1652760, 3: 3545865, 4: 1981035, 5: 1615788, 6: 1320921, 7: 1039905, 8: 661185, 9: 595962, 10: 649809, 11: 418311, 12: 342486, 13: 285264, 14: 388629, 15: 293904, 16: 218043, 17: 223596, 18: 110493, 19: 178794, 20: 89109, 21: 124344, 22: 102294, 23: 115794, 24: 82278, 25: 112086, 26: 62838, 27: 75258, 28: 69777, 29: 87633, 30: 56466, 31: 73809, 32: 74691, 33: 44496, 34: 84852, 35: 72459, 36: 31932, 37: 50733, 38: 62739, 39: 35154, 40: 43632, 41: 28260, 42: 24885, 43: 21951, 44: 21825, 45: 22536, 46: 19134, 47: 17352, 48: 12312, 49: 23715, 50: 13851, 51: 28827, 52: 17100, 53: 16128, 54: 16758, 55: 15084, 56: 17973, 57: 16992, 58: 12924, 59: 12285, 60: 8973, 61: 16542, 62: 9855, 63: 17478, 64: 10836, 65: 13131, 66: 12600, 67: 13212, 68: 8100, 69: 13500, 70: 9090, 71: 11187, 72: 10107, 73: 9864, 74: 8973, 75: 7002, 76: 7578, 77: 13131, 78: 5274, 79: 6561, 80: 5382, 81: 6183, 82: 4869, 83: 5445, 84: 5859, 85: 5139, 86: 7929, 87: 4977, 88: 6363, 89: 7407, 90: 4374, 91: 4680, 92: 3708, 93: 4986, 94: 3159, 95: 4914, 96: 5751, 97: 4626, 98: 6507, 99: 5778, 100: 2997, 101: 3411, 102: 2961, 103: 3285, 104: 3240, 105: 3933, 106: 3186, 107: 3168, 108: 3132, 109: 4320, 110: 2943, 111: 3069, 112: 2826, 113: 3069, 114: 2934, 115: 4617, 116: 4437, 117: 2385, 118: 2898, 119: 2988, 120: 2178, 121: 3447, 122: 2682, 123: 3060, 124: 2592, 125: 2421, 126: 2493, 127: 2790, 128: 2259, 129: 3159, 130: 3051, 131: 2376, 132: 2412, 133: 2592, 134: 2277, 135: 2538, 136: 2502, 137: 2142, 138: 1836, 139: 9684, 140: 1908, 141: 2628, 142: 2493, 143: 2520, 144: 2061, 145: 2367, 146: 2034, 147: 2466, 148: 1890, 149: 3582, 150: 2439, 151: 3024, 152: 1557, 153: 1710, 154: 2214, 155: 2664, 156: 1737, 157: 1503, 158: 1017, 159: 1467, 160: 1332, 161: 2196, 162: 1467, 163: 1755, 164: 2277, 165: 1791, 166: 1647, 167: 1998, 168: 1458, 169: 1647, 170: 1305, 171: 1917, 172: 1503, 173: 1386, 174: 756, 175: 1278, 176: 972, 177: 990, 178: 810, 179: 1422, 180: 2025, 181: 1008, 182: 1566, 183: 1890, 184: 1071, 185: 1089, 186: 882, 187: 3591, 188: 3870, 189: 1620, 190: 873, 191: 2412, 192: 792, 193: 1341, 194: 981, 195: 4095, 196: 1188, 197: 855, 198: 1539, 199: 1161, 200: 1701, 201: 3699, 202: 0, 203: 0, 204: 0, 205: 0, 206: 0, 207: 0, 208: 0, 209: 0}


lens = {0: 0, 1: 0, 2: 351, 3: 4086, 4: 609480, 5: 204129, 6: 971757, 7: 1485828, 8: 785853, 9: 432882, 10: 892674, 11: 801378, 12: 565929, 13: 366039, 14: 374175, 15: 274887, 16: 255888, 17: 250830, 18: 349569, 19: 305100, 20: 186057, 21: 153351, 22: 252261, 23: 196254, 24: 140661, 25: 80964, 26: 94059, 27: 109287, 28: 103104, 29: 61533, 30: 78012, 31: 83520, 32: 93609, 33: 94725, 34: 97020, 35: 86445, 36: 74889, 37: 43812, 38: 63693, 39: 90342, 40: 52200, 41: 45513, 42: 31536, 43: 30519, 44: 44100, 45: 33264, 46: 27999, 47: 41202, 48: 20214, 49: 25308, 50: 28665, 51: 28692, 52: 24579, 53: 17253, 54: 23805, 55: 26028, 56: 21798, 57: 18207, 58: 13815, 59: 18918, 60: 15120, 61: 29250, 62: 33345, 63: 14085, 64: 27909, 65: 31563, 66: 10251, 67: 10116, 68: 32445, 69: 8901, 70: 12987, 71: 26838, 72: 28089, 73: 8784, 74: 25614, 75: 27171, 76: 29484, 77: 8046, 78: 7038, 79: 27585, 80: 9774, 81: 8136, 82: 7884, 83: 4806, 84: 5913, 85: 8766, 86: 8199, 87: 5922, 88: 7209, 89: 5238, 90: 6255, 91: 9342, 92: 5670, 93: 6507, 94: 6525, 95: 8721, 96: 14625, 97: 5931, 98: 7056, 99: 4914, 100: 9441, 101: 4491, 102: 6156, 103: 5472, 104: 4887, 105: 5202, 106: 5733, 107: 10350, 108: 5058, 109: 4473, 110: 4770, 111: 3438, 112: 4266, 113: 4851, 114: 5076, 115: 2511, 116: 4887, 117: 2808, 118: 4068, 119: 3060, 120: 4230, 121: 3150, 122: 3339, 123: 2709, 124: 2349, 125: 2223, 126: 3492, 127: 2151, 128: 2421, 129: 5427, 130: 5949, 131: 2952, 132: 2286, 133: 2457, 134: 1827, 135: 5067, 136: 3492, 137: 2268, 138: 1890, 139: 1629, 140: 1674, 141: 1476, 142: 1953, 143: 1998, 144: 2034, 145: 1836, 146: 1593, 147: 3195, 148: 2250, 149: 2457, 150: 1458, 151: 2655, 152: 2133, 153: 2430, 154: 3222, 155: 1179, 156: 2007, 157: 1143, 158: 1719, 159: 2520, 160: 1701, 161: 1314, 162: 1881, 163: 1809, 164: 1692, 165: 1116, 166: 2061, 167: 1611, 168: 1692, 169: 2241, 170: 1035, 171: 1989, 172: 2079, 173: 1548, 174: 1251, 175: 1341, 176: 2034, 177: 1359, 178: 1413, 179: 1008, 180: 1845, 181: 1575, 182: 1458, 183: 1359, 184: 1278, 185: 1224, 186: 1674, 187: 999, 188: 1026, 189: 1611, 190: 3168, 191: 900, 192: 2061, 193: 4014, 194: 1935, 195: 918, 196: 1089, 197: 1638, 198: 1377, 199: 1098, 200: 963, 201: 1377, 202: 1287, 203: 1116, 204: 1296, 205: 1161, 206: 1854, 207: 1161, 208: 1314, 209: 819, 210: 855, 211: 1350, 212: 945, 213: 1287, 214: 1053, 215: 846, 216: 765, 217: 1017, 218: 666, 219: 1620, 220: 1071, 221: 1206, 222: 900, 223: 927, 224: 684, 225: 666, 226: 747, 227: 873, 228: 747, 229: 531, 230: 1170, 231: 1206, 232: 720, 233: 1323, 234: 702, 235: 828, 236: 720, 237: 747, 238: 1053, 239: 648, 240: 909, 241: 1458, 242: 720, 243: 729, 244: 981, 245: 909, 246: 873, 247: 2952, 248: 2565, 249: 828, 250: 1071, 251: 747, 252: 549, 253: 729, 254: 666, 255: 396, 256: 630, 257: 378, 258: 540, 259: 864, 260: 432, 261: 729, 262: 675, 263: 1152, 264: 477, 265: 3375, 266: 585, 267: 729, 268: 612, 269: 549, 270: 423, 271: 504, 272: 693, 273: 396, 274: 459, 275: 810, 276: 621, 277: 468, 278: 405, 279: 360, 280: 378, 281: 477, 282: 567, 283: 288, 284: 387, 285: 369, 286: 360, 287: 297, 288: 333, 289: 225, 290: 540, 291: 468, 292: 198, 293: 216, 294: 297, 295: 225, 296: 297, 297: 171, 298: 234, 299: 234, 300: 351, 301: 180, 302: 6444, 303: 117, 304: 198, 305: 261, 306: 54, 307: 171, 308: 225, 309: 171, 310: 261, 311: 99, 312: 162, 313: 135, 314: 99, 315: 180, 316: 126, 317: 207, 318: 108, 319: 513, 320: 387, 321: 72, 322: 315, 323: 90, 324: 36, 325: 63, 326: 1386, 327: 720, 328: 153, 329: 108, 330: 54, 331: 468, 332: 18, 333: 675, 334: 909, 335: 18, 336: 153, 337: 153, 338: 9, 339: 36, 340: 27, 341: 0, 342: 99, 343: 27, 344: 117, 345: 45, 346: 54, 347: 36, 348: 63, 349: 90, 350: 18, 351: 9, 352: 126, 353: 27, 354: 9, 355: 18, 356: 0, 357: 0, 358: 9, 359: 9, 360: 27, 361: 18, 362: 0, 363: 0, 364: 9, 365: 0, 366: 0, 367: 9, 368: 0, 369: 9, 370: 0, 371: 0, 372: 0, 373: 0, 374: 0, 375: 9, 376: 0, 377: 9, 378: 0, 379: 0, 380: 0, 381: 0, 382: 0, 383: 0, 384: 0, 385: 0, 386: 0, 387: 0, 388: 0, 389: 9, 390: 9, 391: 0, 392: 0, 393: 0, 394: 18, 395: 0, 396: 0, 397: 0, 398: 9, 399: 0, 400: 0, 401: 0, 402: 0, 403: 0, 404: 0, 405: 0, 406: 0, 407: 9}

from matplotlib import pyplot as plt

lens = [lens[i] for i in range(2,408)]
plt.yscale('log')
plt.xlabel('token length of C flagment')
plt.ylabel('number of flagments')
plt.plot(lens)
plt.show()
